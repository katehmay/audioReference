(() => {
  console.log('fired!');

  function logKeyCode(event) {
    //debugger;
    //event is an object that is generated by any events
    //it contains all of the info about the event, what
    //triggered it, where it occured on the page etc.
    console.log(event.keyCode);

    let currentKey = document.querySelector(`div[data-key="${event.keyCode}"]`);

    if (!currentKey) {
      //if there's no matching div with that key, then exit
      return;
    } else {
      //apply the playing class to the current div (the matching keyCode)
      currentKey.classList.add('playing');
    }

    let currentAudioClip =  document.querySelector(`audio[data-key="${event.keyCode}"]`);

    //if we make a successful match, then play that matching audio element
    //a ! (bang operator) is a test for a falsy value => means "not"
    if (!currentAudioClip){ //if we don't have a match
      return;
      //currentAudioClip.play();
    } else {
      //there is no match, so no audio element to play -> do nothing
      //a return will make a function exit without breaking anything
      currentAudioClip.play()
      //return;
    }
  }

  function resetSound(event) {

    //I need this to reset the audio, but only if I can find a matching element
    //the event has the keycode – I need to make sure I find the audio first, and then reset setInterval(function () {

    //audio has a currentTime property – reset that to 0?
    //need to check a condition with an in statement?
    let currentAudioClip = document.querySelector(`audio[data-key="${event.keyCode}"]`);

    if (!currentAudioClip){
      return;
    } else {
    currentAudioClip.currentTime = 0;
    }
  }

  //try to get keyboard press events
  window.addEventListener("keydown", logKeyCode);
  window.addEventListener("keyup", resetSound);
})();
