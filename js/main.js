(() => {
  console.log('fired!');

  function logKeyCode(event) {
    //debugger;
    //event is an object that is generated by any events
    //it contains all of the info about the event, what
    //triggered it, where it occured on the page etc.
    console.log(event.keyCode);
    let currentKey = document.querySelector(`div[data-key="${event.keyCode}"]`);

    if (!currentKey) {
      //if there's no matching div with that key, then exit
      return;
    } else {
      //apply the playing class to the current div (the matching keyCode)
      currentKey.classList.add('playing');

      //play the audio that goes with the div
      let currentAudioClip = document.querySelector(`audio[data-key="${event.keyCode}"]`);
      currentAudioClip.currentTime = 0;
      currentAudioClip.play();
    }
  }

  function removePlayingClass(event) {
    //listen for the transitions to end, and then remove the playing class from the current key

    //I need a transition that only fires once so that I can only run this function once
    if (event.propertyName !== "transform") {
      return;
    } else {
      //event.target is the target of the current event
      //in this case it is the div because that's the element that is transitioning
      console.log('transform transitions is done');
      event.target.classList.remove('playing');
    }
  }

  const keys = Array.from(document.querySelectorAll('.key'));
  keys.forEach(key => key.addEventListener('transitionend', removePlayingClass));

  //try to get keyboard press events
  window.addEventListener("keydown", logKeyCode);
})();
